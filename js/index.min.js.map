{"version":3,"sources":["index.min.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Object","defineProperty","value","obj","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_idb","_idb2","__esModule","default","DBHelper","instance","TypeError","_classCallCheck","this","open","upgradeDb","oldVersion","createObjectStore","dbPromise","then","db","transaction","objectStore","get","restaurants","tx","put","complete","callback","idbInit","getRestaurantsFromDb","fetch","DATABASE_URL","response","json","updateRestaurantsInDb","catch","error","id","fetchRestaurants","restaurant","find","cuisine","results","filter","cuisine_type","neighborhood","neighborhoods","map","v","uniqueNeighborhoods","indexOf","cuisines","uniqueCuisines","photograph","marker","L","latlng","lat","lng","title","name","alt","url","urlForRestaurant","addTo","newMap","idb","2","_dbhelper","_dbhelper2","document","addEventListener","event","initMap","fetchNeighborhoods","fetchCuisines","registerServiceWorker","getElementById","updateRestaurants","navigator","serviceWorker","register","console","log","self","fillNeighborhoodsHTML","arguments","undefined","select","forEach","option","createElement","innerHTML","append","fillCuisinesHTML","center","zoom","scrollWheelZoom","tileLayer","mapboxToken","maxZoom","attribution","cSelect","nSelect","cIndex","selectedIndex","nIndex","fetchRestaurantByCuisineAndNeighborhood","resetRestaurants","fillRestaurantsHTML","markers","remove","ul","createRestaurantHTML","addMarkersToMap","li","picture","webPsource","jpegSource","srcset","webPImageUrlForRestaurant","type","jpegImageUrlForRestaurant","image","className","src","appendChild","address","more","href","setAttribute","mapMarkerForRestaurant","on","window","location","options","push","./dbhelper","3","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","promisifyRequestCall","method","args","apply","proxyProperties","ProxyClass","targetProp","properties","prop","set","val","proxyRequestMethods","proxyMethods","proxyCursorRequestMethods","Cursor","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","oncomplete","onabort","UpgradeDB","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","IDBTransaction","IDBDatabase","funcName","replace","arr","Array","slice","nativeObject","getAll","query","count","items","iterateCursor","continue","exp","version","upgradeCallback","indexedDB","onupgradeneeded","delete"],"mappings":"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","file":"index.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\r\nommon database helper functions.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\nvar _idb = require('idb');\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DBHelper = function () {\n  function DBHelper() {\n    _classCallCheck(this, DBHelper);\n  }\n\n  _createClass(DBHelper, null, [{\n    key: 'idbInit',\n\n\n    /**\r\n     * Initialize restaurant-db database in IndexedDB\r\n     */\n    value: function idbInit() {\n      return _idb2.default.open('restaurant-db', 1, function (upgradeDb) {\n        switch (upgradeDb.oldVersion) {\n          case 0:\n            upgradeDb.createObjectStore('restaurants');\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants from restaurant-list.\r\n     */\n\n  }, {\n    key: 'getRestaurantsFromDb',\n    value: function getRestaurantsFromDb(dbPromise) {\n      return dbPromise.then(function (db) {\n        if (!db) return;\n        var tx = db.transaction('restaurants');\n        var restaurantsStore = tx.objectStore('restaurants');\n        return restaurantsStore.get('restaurant-list');\n      });\n    }\n\n    /**\r\n     * Update restaurants to restaurant-list.\r\n     */\n\n  }, {\n    key: 'updateRestaurantsInDb',\n    value: function updateRestaurantsInDb(restaurants, dbPromise) {\n      return dbPromise.then(function (db) {\n        if (!db) return;\n        var tx = db.transaction('restaurants', 'readwrite');\n        var restaurantsStore = tx.objectStore('restaurants');\n        restaurantsStore.put(restaurants, 'restaurant-list');\n        tx.complete;\n      });\n    }\n\n    /**\r\n     * Fetch all restaurants.\r\n     */\n\n  }, {\n    key: 'fetchRestaurants',\n    value: function fetchRestaurants(callback) {\n      var dbPromise = DBHelper.idbInit();\n\n      DBHelper.getRestaurantsFromDb(dbPromise).then(function (restaurants) {\n        if (restaurants && restaurants.length > 0) {\n          // Fetched restaurants from restaurant-list\n          callback(null, restaurants);\n        } else {\n          return fetch(DBHelper.DATABASE_URL);\n        }\n      }).then(function (response) {\n        // Got a success response\n        if (!response) return;\n        return response.json();\n      }).then(function (restaurants) {\n        // Got the restaurants successfully! Fingers crossed!\n        if (!restaurants) return;\n        DBHelper.updateRestaurantsInDb(restaurants, dbPromise);\n        callback(null, restaurants);\n      }).catch(function (error) {\n        // Oops!. Got an error from server or some error while operations!\n        var errorMessage = 'Request failed. Error message: ' + error;\n        callback(errorMessage, null);\n      });\n    }\n\n    /**\r\n     * Fetch a restaurant by its ID.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantById',\n    value: function fetchRestaurantById(id, callback) {\n      // fetch all restaurants with proper error handling.\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          var restaurant = restaurants.find(function (r) {\n            return r.id == id;\n          });\n          if (restaurant) {\n            // Got the restaurant\n            callback(null, restaurant);\n          } else {\n            // Restaurant does not exist in the database\n            callback('Restaurant does not exist', null);\n          }\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a cuisine type with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByCuisine',\n    value: function fetchRestaurantByCuisine(cuisine, callback) {\n      // Fetch all restaurants  with proper error handling\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Filter restaurants to have only given cuisine type\n          var results = restaurants.filter(function (r) {\n            return r.cuisine_type == cuisine;\n          });\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a neighborhood with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByNeighborhood',\n    value: function fetchRestaurantByNeighborhood(neighborhood, callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Filter restaurants to have only given neighborhood\n          var results = restaurants.filter(function (r) {\n            return r.neighborhood == neighborhood;\n          });\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a cuisine and a neighborhood with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByCuisineAndNeighborhood',\n    value: function fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          var results = restaurants;\n          if (cuisine != 'all') {\n            // filter by cuisine\n            results = results.filter(function (r) {\n              return r.cuisine_type == cuisine;\n            });\n          }\n          if (neighborhood != 'all') {\n            // filter by neighborhood\n            results = results.filter(function (r) {\n              return r.neighborhood == neighborhood;\n            });\n          }\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch all neighborhoods with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchNeighborhoods',\n    value: function fetchNeighborhoods(callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Get all neighborhoods from all restaurants\n          var neighborhoods = restaurants.map(function (v, i) {\n            return restaurants[i].neighborhood;\n          });\n          // Remove duplicates from neighborhoods\n          var uniqueNeighborhoods = neighborhoods.filter(function (v, i) {\n            return neighborhoods.indexOf(v) == i;\n          });\n          callback(null, uniqueNeighborhoods);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch all cuisines with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchCuisines',\n    value: function fetchCuisines(callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Get all cuisines from all restaurants\n          var cuisines = restaurants.map(function (v, i) {\n            return restaurants[i].cuisine_type;\n          });\n          // Remove duplicates from cuisines\n          var uniqueCuisines = cuisines.filter(function (v, i) {\n            return cuisines.indexOf(v) == i;\n          });\n          callback(null, uniqueCuisines);\n        }\n      });\n    }\n\n    /**\r\n     * Restaurant page URL.\r\n     */\n\n  }, {\n    key: 'urlForRestaurant',\n    value: function urlForRestaurant(restaurant) {\n      return './restaurant.html?id=' + restaurant.id;\n    }\n\n    /**\r\n     * Restaurant image URL.\r\n     */\n\n  }, {\n    key: 'webPImageUrlForRestaurant',\n    value: function webPImageUrlForRestaurant(restaurant) {\n      return '/img/webp/' + restaurant.photograph + '.webp';\n    }\n  }, {\n    key: 'jpegImageUrlForRestaurant',\n    value: function jpegImageUrlForRestaurant(restaurant) {\n      return '/img/' + restaurant.photograph + '.jpg';\n    }\n\n    /**\r\n     * Map marker for a restaurant.\r\n     */\n\n  }, {\n    key: 'mapMarkerForRestaurant',\n    value: function mapMarkerForRestaurant(restaurant, map) {\n      var marker = new L.marker([restaurant.latlng.lat, restaurant.latlng.lng], {\n        title: restaurant.name,\n        alt: restaurant.name,\n        url: DBHelper.urlForRestaurant(restaurant)\n      });\n      marker.addTo(newMap);\n      return marker;\n    }\n  }, {\n    key: 'DATABASE_URL',\n\n\n    /**\r\n     * Database URL.\r\n     * Change this to restaurants.json file location on your server.\r\n     */\n    get: function get() {\n      var port = 1337; // Change this to your server port\n      return 'http://localhost:' + port + '/restaurants';\n    }\n  }]);\n\n  return DBHelper;\n}();\n\nexports.default = DBHelper;\n\n},{\"idb\":3}],2:[function(require,module,exports){\n'use strict';\n\nvar _dbhelper = require('./dbhelper');\n\nvar _dbhelper2 = _interopRequireDefault(_dbhelper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// let restaurants,\n//   neighborhoods,\n//   cuisines\n// var newMap\n// var markers = []\n\n/**\r\n * Fetch neighborhoods and cuisines as soon as the page is loaded.\r\n */\ndocument.addEventListener('DOMContentLoaded', function (event) {\n  initMap(); // added\n  fetchNeighborhoods();\n  fetchCuisines();\n  // Register service worker\n  registerServiceWorker();\n\n  var neighborhoodsSelect = document.getElementById('neighborhoods-select');\n  neighborhoodsSelect.addEventListener('change', updateRestaurants);\n\n  var cuisinesSelect = document.getElementById('cuisines-select');\n  cuisinesSelect.addEventListener('change', updateRestaurants);\n});\n\n/**\r\n * Register a service worker for caching static and dynamic assets.\r\n */\nvar registerServiceWorker = function registerServiceWorker() {\n  if (!navigator.serviceWorker) {\n    return;\n  }\n  navigator.serviceWorker.register('../service-worker.js').then(function () {\n    console.log('Service worker registered successfully!');\n  }).catch(function (error) {\n    console.log('Error while registering service worker:', error);\n  });\n};\n\n/**\r\n * Fetch all neighborhoods and set their HTML.\r\n */\nvar fetchNeighborhoods = function fetchNeighborhoods() {\n  _dbhelper2.default.fetchNeighborhoods(function (error, neighborhoods) {\n    if (error) {\n      // Got an error\n      console.error(error);\n    } else {\n      self.neighborhoods = neighborhoods;\n      fillNeighborhoodsHTML();\n    }\n  });\n};\n\n/**\r\n * Set neighborhoods HTML.\r\n */\nvar fillNeighborhoodsHTML = function fillNeighborhoodsHTML() {\n  var neighborhoods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.neighborhoods;\n\n  var select = document.getElementById('neighborhoods-select');\n  neighborhoods.forEach(function (neighborhood) {\n    var option = document.createElement('option');\n    option.innerHTML = neighborhood;\n    option.value = neighborhood;\n    select.append(option);\n  });\n};\n\n/**\r\n * Fetch all cuisines and set their HTML.\r\n */\nvar fetchCuisines = function fetchCuisines() {\n  _dbhelper2.default.fetchCuisines(function (error, cuisines) {\n    if (error) {\n      // Got an error!\n      console.error(error);\n    } else {\n      self.cuisines = cuisines;\n      fillCuisinesHTML();\n    }\n  });\n};\n\n/**\r\n * Set cuisines HTML.\r\n */\nvar fillCuisinesHTML = function fillCuisinesHTML() {\n  var cuisines = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.cuisines;\n\n  var select = document.getElementById('cuisines-select');\n\n  cuisines.forEach(function (cuisine) {\n    var option = document.createElement('option');\n    option.innerHTML = cuisine;\n    option.value = cuisine;\n    select.append(option);\n  });\n};\n\n/**\r\n * Initialize leaflet map, called from HTML.\r\n */\nvar initMap = function initMap() {\n  self.newMap = L.map('map', {\n    center: [40.722216, -73.987501],\n    zoom: 12,\n    scrollWheelZoom: false\n  });\n  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {\n    mapboxToken: 'pk.eyJ1IjoicGFydGhzMDA3IiwiYSI6ImNqamhqcHY4NDBlNGUzcHJsaHk0em5ramMifQ.0KuesXVX-h8PIy3JtbH2Xg',\n    maxZoom: 18,\n    attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, +\\n        <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>,  +\\n        Imagery \\xA9 <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    id: 'mapbox.streets'\n  }).addTo(self.newMap);\n\n  updateRestaurants();\n};\n\n/**\r\n * Update page and map for current restaurants.\r\n */\nvar updateRestaurants = function updateRestaurants() {\n  var cSelect = document.getElementById('cuisines-select');\n  var nSelect = document.getElementById('neighborhoods-select');\n\n  var cIndex = cSelect.selectedIndex;\n  var nIndex = nSelect.selectedIndex;\n\n  var cuisine = cSelect[cIndex].value;\n  var neighborhood = nSelect[nIndex].value;\n\n  _dbhelper2.default.fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, function (error, restaurants) {\n    if (error) {\n      // Got an error!\n      console.error(error);\n    } else {\n      resetRestaurants(restaurants);\n      fillRestaurantsHTML();\n    }\n  });\n};\n\n/**\r\n * Clear current restaurants, their HTML and remove their map markers.\r\n */\nvar resetRestaurants = function resetRestaurants(restaurants) {\n  // Remove all restaurants\n  self.restaurants = [];\n  var ul = document.getElementById('restaurants-list');\n  ul.innerHTML = '';\n\n  // Remove all map markers\n  if (self.markers) {\n    self.markers.forEach(function (marker) {\n      return marker.remove();\n    });\n  }\n  self.markers = [];\n  self.restaurants = restaurants;\n};\n\n/**\r\n * Create all restaurants HTML and add them to the webpage.\r\n */\nvar fillRestaurantsHTML = function fillRestaurantsHTML() {\n  var restaurants = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurants;\n\n  var ul = document.getElementById('restaurants-list');\n  restaurants.forEach(function (restaurant) {\n    ul.append(createRestaurantHTML(restaurant));\n  });\n  addMarkersToMap();\n};\n\n/**\r\n * Create restaurant HTML.\r\n */\nvar createRestaurantHTML = function createRestaurantHTML(restaurant) {\n  var li = document.createElement('li');\n\n  var picture = document.createElement('picture');\n  var webPsource = document.createElement('source');\n  var jpegSource = document.createElement('source');\n\n  webPsource.srcset = _dbhelper2.default.webPImageUrlForRestaurant(restaurant);\n  webPsource.type = 'image/webp';\n\n  jpegSource.srcset = _dbhelper2.default.jpegImageUrlForRestaurant(restaurant);\n  jpegSource.type = 'image/jpeg';\n\n  var image = document.createElement('img');\n  image.className = 'restaurant-img';\n  image.src = _dbhelper2.default.jpegImageUrlForRestaurant(restaurant);\n  // Add alt-text for restaurant images according to restaurant names.\n  image.alt = 'Name of the restaurant: ' + restaurant.name;\n\n  picture.appendChild(webPsource);\n  picture.appendChild(jpegSource);\n  picture.appendChild(image);\n  li.append(picture);\n\n  var name = document.createElement('h3');\n  name.innerHTML = restaurant.name;\n  li.append(name);\n\n  var neighborhood = document.createElement('p');\n  neighborhood.innerHTML = restaurant.neighborhood;\n  li.append(neighborhood);\n\n  var address = document.createElement('p');\n  address.innerHTML = restaurant.address;\n  li.append(address);\n\n  var more = document.createElement('a');\n  more.innerHTML = 'View Details';\n  more.href = _dbhelper2.default.urlForRestaurant(restaurant);\n  // Make link have role of button with better label for improved accessibility and user experience.\n  more.setAttribute('role', 'button');\n  more.setAttribute('aria-label', 'view details of ' + restaurant.name + ' restaurant');\n  li.append(more);\n\n  return li;\n};\n\n/**\r\n * Add markers for current restaurants to the map.\r\n */\nvar addMarkersToMap = function addMarkersToMap() {\n  var restaurants = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurants;\n\n  restaurants.forEach(function (restaurant) {\n    // Add marker to the map\n    var marker = _dbhelper2.default.mapMarkerForRestaurant(restaurant, self.newMap);\n    marker.on(\"click\", onClick);\n    function onClick() {\n      window.location.href = marker.options.url;\n    }\n    self.markers.push(marker);\n  });\n};\n\n},{\"./dbhelper\":1}],3:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      if (request) {\n        request.onupgradeneeded = function(event) {\n          if (upgradeCallback) {\n            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n          }\n        };\n      }\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}]},{},[2]);\n"]}