{"version":3,"sources":["restaurant.min.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Object","defineProperty","value","obj","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_idb","_idb2","__esModule","default","DBHelper","instance","TypeError","_classCallCheck","this","open","upgradeDb","oldVersion","createObjectStore","dbPromise","then","db","transaction","objectStore","get","restaurants","tx","put","complete","callback","idbInit","getRestaurantsFromDb","fetch","DATABASE_URL","response","json","updateRestaurantsInDb","catch","error","id","fetchRestaurants","restaurant","find","cuisine","results","filter","cuisine_type","neighborhood","neighborhoods","map","v","uniqueNeighborhoods","indexOf","cuisines","uniqueCuisines","photograph","marker","L","latlng","lat","lng","title","name","alt","url","urlForRestaurant","addTo","newMap","idb","2","_dbhelper","_dbhelper2","document","addEventListener","event","initMap","fetchRestaurantFromURL","console","self","center","zoom","scrollWheelZoom","tileLayer","mapboxToken","maxZoom","attribution","fillBreadcrumb","mapMarkerForRestaurant","getParameterByName","fetchRestaurantById","fillRestaurantHTML","arguments","undefined","getElementById","innerHTML","address","picture","webPsource","createElement","jpegSource","srcset","webPImageUrlForRestaurant","type","jpegImageUrlForRestaurant","image","className","src","appendChild","operating_hours","fillRestaurantHoursHTML","fillReviewsHTML","operatingHours","hours","row","day","time","reviews","container","noReviews","ul","forEach","review","createReviewHTML","li","date","rating","comments","breadcrumb","window","location","href","replace","RegExp","exec","decodeURIComponent","./dbhelper","3","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","promisifyRequestCall","method","args","apply","proxyProperties","ProxyClass","targetProp","properties","prop","set","val","proxyRequestMethods","proxyMethods","proxyCursorRequestMethods","Cursor","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","oncomplete","onabort","UpgradeDB","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","IDBTransaction","IDBDatabase","funcName","arr","Array","slice","nativeObject","getAll","query","count","items","iterateCursor","push","continue","exp","version","upgradeCallback","indexedDB","onupgradeneeded","delete"],"mappings":"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","file":"restaurant.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\r\nommon database helper functions.\r\nn\nvar _idb = require('idb');\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DBHelper = function () {\n  function DBHelper() {\n    _classCallCheck(this, DBHelper);\n  }\n\n  _createClass(DBHelper, null, [{\n    key: 'idbInit',\n\n\n    /**\r\n     * Initialize restaurant-db database in IndexedDB\r\n     */\n    value: function idbInit() {\n      return _idb2.default.open('restaurant-db', 1, function (upgradeDb) {\n        switch (upgradeDb.oldVersion) {\n          case 0:\n            upgradeDb.createObjectStore('restaurants');\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants from restaurant-list.\r\n     */\n\n  }, {\n    key: 'getRestaurantsFromDb',\n    value: function getRestaurantsFromDb(dbPromise) {\n      return dbPromise.then(function (db) {\n        if (!db) return;\n        var tx = db.transaction('restaurants');\n        var restaurantsStore = tx.objectStore('restaurants');\n        return restaurantsStore.get('restaurant-list');\n      });\n    }\n\n    /**\r\n     * Update restaurants to restaurant-list.\r\n     */\n\n  }, {\n    key: 'updateRestaurantsInDb',\n    value: function updateRestaurantsInDb(restaurants, dbPromise) {\n      return dbPromise.then(function (db) {\n        if (!db) return;\n        var tx = db.transaction('restaurants', 'readwrite');\n        var restaurantsStore = tx.objectStore('restaurants');\n        restaurantsStore.put(restaurants, 'restaurant-list');\n        tx.complete;\n      });\n    }\n\n    /**\r\n     * Fetch all restaurants.\r\n     */\n\n  }, {\n    key: 'fetchRestaurants',\n    value: function fetchRestaurants(callback) {\n      var dbPromise = DBHelper.idbInit();\n\n      DBHelper.getRestaurantsFromDb(dbPromise).then(function (restaurants) {\n        if (restaurants && restaurants.length > 0) {\n          // Fetched restaurants from restaurant-list\n          callback(null, restaurants);\n        } else {\n          return fetch(DBHelper.DATABASE_URL);\n        }\n      }).then(function (response) {\n        // Got a success response\n        if (!response) return;\n        return response.json();\n      }).then(function (restaurants) {\n        // Got the restaurants successfully! Fingers crossed!\n        if (!restaurants) return;\n        DBHelper.updateRestaurantsInDb(restaurants, dbPromise);\n        callback(null, restaurants);\n      }).catch(function (error) {\n        // Oops!. Got an error from server or some error while operations!\n        var errorMessage = 'Request failed. Error message: ' + error;\n        callback(errorMessage, null);\n      });\n    }\n\n    /**\r\n     * Fetch a restaurant by its ID.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantById',\n    value: function fetchRestaurantById(id, callback) {\n      // fetch all restaurants with proper error handling.\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          var restaurant = restaurants.find(function (r) {\n            return r.id == id;\n          });\n          if (restaurant) {\n            // Got the restaurant\n            callback(null, restaurant);\n          } else {\n            // Restaurant does not exist in the database\n            callback('Restaurant does not exist', null);\n          }\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a cuisine type with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByCuisine',\n    value: function fetchRestaurantByCuisine(cuisine, callback) {\n      // Fetch all restaurants  with proper error handling\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Filter restaurants to have only given cuisine type\n          var results = restaurants.filter(function (r) {\n            return r.cuisine_type == cuisine;\n          });\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a neighborhood with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByNeighborhood',\n    value: function fetchRestaurantByNeighborhood(neighborhood, callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Filter restaurants to have only given neighborhood\n          var results = restaurants.filter(function (r) {\n            return r.neighborhood == neighborhood;\n          });\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a cuisine and a neighborhood with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByCuisineAndNeighborhood',\n    value: function fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          var results = restaurants;\n          if (cuisine != 'all') {\n            // filter by cuisine\n            results = results.filter(function (r) {\n              return r.cuisine_type == cuisine;\n            });\n          }\n          if (neighborhood != 'all') {\n            // filter by neighborhood\n            results = results.filter(function (r) {\n              return r.neighborhood == neighborhood;\n            });\n          }\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch all neighborhoods with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchNeighborhoods',\n    value: function fetchNeighborhoods(callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Get all neighborhoods from all restaurants\n          var neighborhoods = restaurants.map(function (v, i) {\n            return restaurants[i].neighborhood;\n          });\n          // Remove duplicates from neighborhoods\n          var uniqueNeighborhoods = neighborhoods.filter(function (v, i) {\n            return neighborhoods.indexOf(v) == i;\n          });\n          callback(null, uniqueNeighborhoods);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch all cuisines with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchCuisines',\n    value: function fetchCuisines(callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Get all cuisines from all restaurants\n          var cuisines = restaurants.map(function (v, i) {\n            return restaurants[i].cuisine_type;\n          });\n          // Remove duplicates from cuisines\n          var uniqueCuisines = cuisines.filter(function (v, i) {\n            return cuisines.indexOf(v) == i;\n          });\n          callback(null, uniqueCuisines);\n        }\n      });\n    }\n\n    /**\r\n     * Restaurant page URL.\r\n     */\n\n  }, {\n    key: 'urlForRestaurant',\n    value: function urlForRestaurant(restaurant) {\n      return './restaurant.html?id=' + restaurant.id;\n    }\n\n    /**\r\n     * Restaurant image URL.\r\n     */\n\n  }, {\n    key: 'webPImageUrlForRestaurant',\n    value: function webPImageUrlForRestaurant(restaurant) {\n      return '/img/webp/' + restaurant.photograph + '.webp';\n    }\n  }, {\n    key: 'jpegImageUrlForRestaurant',\n    value: function jpegImageUrlForRestaurant(restaurant) {\n      return '/img/' + restaurant.photograph + '.jpg';\n    }\n\n    /**\r\n     * Map marker for a restaurant.\r\n     */\n\n  }, {\n    key: 'mapMarkerForRestaurant',\n    value: function mapMarkerForRestaurant(restaurant, map) {\n      var marker = new L.marker([restaurant.latlng.lat, restaurant.latlng.lng], {\n        title: restaurant.name,\n        alt: restaurant.name,\n        url: DBHelper.urlForRestaurant(restaurant)\n      });\n      marker.addTo(newMap);\n      return marker;\n    }\n  }, {\n    key: 'DATABASE_URL',\n\n\n    /**\r\n     * Database URL.\r\n     * Change this to restaurants.json file location on your server.\r\n     */\n    get: function get() {\n      var port = 1337; // Change this to your server port\n      return 'http://localhost:' + port + '/restaurants';\n    }\n  }]);\n\n  return DBHelper;\n}();\n\nexports.default = DBHelper;\n\n},{\"idb\":3}],2:[function(require,module,exports){\n'use strict';\n\nvar _dbhelper = require('./dbhelper');\n\nvar _dbhelper2 = _interopRequireDefault(_dbhelper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// let restaurant;\n// var newMap;\n\n/**\n * Initialize map as soon as the page is loaded.\n */\ndocument.addEventListener('DOMContentLoaded', function (event) {\n  initMap();\n});\n\n/**\n * Initialize leaflet map\n */\nvar initMap = function initMap() {\n  fetchRestaurantFromURL(function (error, restaurant) {\n    if (error) {\n      // Got an error!\n      console.error(error);\n    } else {\n      self.newMap = L.map('map', {\n        center: [restaurant.latlng.lat, restaurant.latlng.lng],\n        zoom: 16,\n        scrollWheelZoom: false\n      });\n      L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {\n        mapboxToken: 'pk.eyJ1IjoicGFydGhzMDA3IiwiYSI6ImNqamhqcHY4NDBlNGUzcHJsaHk0em5ramMifQ.0KuesXVX-h8PIy3JtbH2Xg',\n        maxZoom: 18,\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' + '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' + 'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        id: 'mapbox.streets'\n      }).addTo(self.newMap);\n      fillBreadcrumb();\n      _dbhelper2.default.mapMarkerForRestaurant(self.restaurant, self.newMap);\n    }\n  });\n};\n\n/**\n * Get current restaurant from page URL.\n */\nvar fetchRestaurantFromURL = function fetchRestaurantFromURL(callback) {\n  if (self.restaurant) {\n    // restaurant already fetched!\n    callback(null, self.restaurant);\n    return;\n  }\n  var id = getParameterByName('id');\n  if (!id) {\n    // no id found in URL\n    error = 'No restaurant id in URL';\n    callback(error, null);\n  } else {\n    _dbhelper2.default.fetchRestaurantById(id, function (error, restaurant) {\n      self.restaurant = restaurant;\n      if (!restaurant) {\n        console.error(error);\n        return;\n      }\n      fillRestaurantHTML();\n      callback(null, restaurant);\n    });\n  }\n};\n\n/**\n * Create restaurant HTML and add it to the webpage\n */\nvar fillRestaurantHTML = function fillRestaurantHTML() {\n  var restaurant = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurant;\n\n  var name = document.getElementById('restaurant-name');\n  name.innerHTML = restaurant.name;\n\n  var address = document.getElementById('restaurant-address');\n  address.innerHTML = restaurant.address;\n\n  var picture = document.getElementById('restaurant-picture');\n  var webPsource = document.createElement('source');\n  var jpegSource = document.createElement('source');\n\n  webPsource.srcset = _dbhelper2.default.webPImageUrlForRestaurant(restaurant);\n  webPsource.type = 'image/webp';\n\n  jpegSource.srcset = _dbhelper2.default.jpegImageUrlForRestaurant(restaurant);\n  jpegSource.type = 'image/jpeg';\n\n  var image = document.createElement('img');\n  image.id = 'restaurant-img';\n  image.className = 'restaurant-img';\n  image.src = _dbhelper2.default.jpegImageUrlForRestaurant(restaurant);\n  // Add alt-text for image according to restaurant name.\n  image.alt = 'Name of the restaurant: ' + restaurant.name;\n\n  picture.appendChild(webPsource);\n  picture.appendChild(jpegSource);\n  picture.appendChild(image);\n\n  var cuisine = document.getElementById('restaurant-cuisine');\n  cuisine.innerHTML = restaurant.cuisine_type;\n\n  // fill operating hours\n  if (restaurant.operating_hours) {\n    fillRestaurantHoursHTML();\n  }\n  // fill reviews\n  fillReviewsHTML();\n};\n\n/**\n * Create restaurant operating hours HTML table and add it to the webpage.\n */\nvar fillRestaurantHoursHTML = function fillRestaurantHoursHTML() {\n  var operatingHours = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurant.operating_hours;\n\n  var hours = document.getElementById('restaurant-hours');\n  for (var key in operatingHours) {\n    var row = document.createElement('tr');\n\n    var day = document.createElement('td');\n    day.innerHTML = key;\n    row.appendChild(day);\n\n    var time = document.createElement('td');\n    time.innerHTML = operatingHours[key];\n    row.appendChild(time);\n\n    hours.appendChild(row);\n  }\n};\n\n/**\n * Create all reviews HTML and add them to the webpage.\n */\nvar fillReviewsHTML = function fillReviewsHTML() {\n  var reviews = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurant.reviews;\n\n  var container = document.getElementById('reviews-container');\n  var title = document.createElement('h2');\n  title.innerHTML = 'Reviews';\n  container.appendChild(title);\n\n  if (!reviews) {\n    var noReviews = document.createElement('p');\n    noReviews.innerHTML = 'No reviews yet!';\n    container.appendChild(noReviews);\n    return;\n  }\n  var ul = document.getElementById('reviews-list');\n  reviews.forEach(function (review) {\n    ul.appendChild(createReviewHTML(review));\n  });\n  container.appendChild(ul);\n};\n\n/**\n * Create review HTML and add it to the webpage.\n */\nvar createReviewHTML = function createReviewHTML(review) {\n  var li = document.createElement('li');\n  var name = document.createElement('p');\n  name.innerHTML = review.name;\n  li.appendChild(name);\n\n  var date = document.createElement('p');\n  date.innerHTML = review.date;\n  li.appendChild(date);\n\n  var rating = document.createElement('p');\n  rating.innerHTML = 'Rating: ' + review.rating;\n  li.appendChild(rating);\n\n  var comments = document.createElement('p');\n  comments.innerHTML = review.comments;\n  li.appendChild(comments);\n\n  return li;\n};\n\n/**\n * Add restaurant name to the breadcrumb navigation menu\n */\nvar fillBreadcrumb = function fillBreadcrumb() {\n  var restaurant = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurant;\n\n  var breadcrumb = document.getElementById('breadcrumb');\n  var li = document.createElement('li');\n  li.innerHTML = restaurant.name;\n  breadcrumb.appendChild(li);\n};\n\n/**\n * Get a parameter by name from page URL.\n */\nvar getParameterByName = function getParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\n},{\"./dbhelper\":1}],3:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      if (request) {\n        request.onupgradeneeded = function(event) {\n          if (upgradeCallback) {\n            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n          }\n        };\n      }\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}]},{},[2]);\n"]}